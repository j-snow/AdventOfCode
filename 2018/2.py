box_ids = [
	'mgdsdwqulhrinkatfjoyzxcbvq',
	'megsdwpulhrinkasfjdyzxcbvk',
	'megsdwpulhmibkatfjoyzccbvq',
	'megsdwtuohrinkatfjoyzecbvq',
	'megsdwpulhdinkatfyoyzxcbvb',
	'megszwpulhrirkatfjoyexcbvq',
	'eegsdwpulhzinkatfjoyzxdbvq',
	'megsdwpulhginkatfjoyqucbvq',
	'leqsdwpulhrinkatfeoyzxcbvq',
	'megsdwpblhrandatfjoyzxcbvq',
	'megrdwpudhrinvatfjoyzxcbvq',
	'mlgsdwpulhrinkatfuoyzxcbyq',
	'mensdwpunhrinsatfjoyzxcbvq',
	'megsdwpnlhrinqatfjoyzxcbuq',
	'megsdwpnlhrinkatfqoysxcbvq',
	'megsdwpulhrinkjtfjoywxobvq',
	'megsdwpclhbinkaffjoyzxcbvq',
	'mersdwpulhrinkattjoyzxcbdq',
	'megsddpwohrinkatfjoyzxcbvq',
	'mejsdwpulhrinratfjoyzxcbvl',
	'megsdwpujhrinkatfjkbzxcbvq',
	'megsdwpujhrinkatfjoyircbvq',
	'megsdwgulhrinkatojoyzxcbvm',
	'qegsdwpulhrinkatfjoyzxggvq',
	'megsdwpflhrinkatfjsazxcbvq',
	'megsdwpulhridkagfjoyzzcbvq',
	'mejsdwpulhriykatfjoyyxcbvq',
	'measdwpulhriakatfjoyzacbvq',
	'mebsdwpulhrinkatfjoyzxmyvq',
	'megsdwpflnrinkatfjoyzxcbxq',
	'megsdwpulhxinuatfjoytxcbvq',
	'megsdwsflhrinkatfjoyzxcmvq',
	'megsdwpuuhritkarfjoyzxcbvq',
	'megsdwpulhrinkazfjoyexcjvq',
	'megsdwpulhrifkatfjokzxcbvc',
	'megsdwmulvrinkatfjoyzxcblq',
	'meggdwpulhrfnkatfjoybxcbvq',
	'megsdwptlhrindatyjoyzxcbvq',
	'megsdwpulhrinkauqjoyzxibvq',
	'megsdwddlhrifkatfjoyzxcbvq',
	'megddwpulhrinkagfjoyzxcbva',
	'messdupulhrinkatfjoyzxqbvq',
	'megsdwpuahrinkatfjotzxchvq',
	'megsewpulhrankathjoyzxcbvq',
	'megsdwpulhrinkatfjoynqcbvv',
	'megsdwpulhrifkatfjotzxcbtq',
	'megsdjpulcrinkitfjoyzxcbvq',
	'fefsowpulhrinkatfjoyzxcbvq',
	'megsdwpulapinkatfjoyzvcbvq',
	'mejsdwpularinkatfjonzxcbvq',
	'megsxwpllrrinkatfjoyzxcbvq',
	'megsdlpulxvinkatfjoyzxcbvq',
	'megsdwpulhriekztfjoyzxxbvq',
	'megspwpulhrinuatfjoyzxcgvq',
	'megqdwpulhrinkatfjoyzujbvq',
	'megsdtpuehrinkatfjoyzxtbvq',
	'megsdwjulhrmnmatfjoyzxcbvq',
	'megjdwpulhrinkztfjoyzpcbvq',
	'megsdwpuljrinkawfjlyzxcbvq',
	'mewsdwpulhtinkatfjodzxcbvq',
	'megsdwpulhrinkatfcoizxcmvq',
	'meisdwpulhrinkatawoyzxcbvq',
	'megshwpulhrinkatfjoyzxcbtz',
	'megsdwpulhfinkatfjowzxcbvj',
	'megodwpulhrcskatfjoyzxcbvq',
	'megydxpulhrinkatfjofzxcbvq',
	'megsdwpulhrinkatljoytxdbvq',
	'mwgsdwpulyrinkatfjoyzxvbvq',
	'meesdwpulhrinkatfjcwzxcbvq',
	'cegsdwpwlhrinkatfioyzxcbvq',
	'megsdwpulhrinkatfqhyxxcbvq',
	'megsrrpulhrxnkatfjoyzxcbvq',
	'megsdgpulhrinkatfjoypxcbnq',
	'xegsdwpulhrinkaxkjoyzxcbvq',
	'mngsdwpulhrenkatfjofzxcbvq',
	'mecsdwpulhrinkabfjoozxcbvq',
	'pegsdkpulhrinkatfuoyzxcbvq',
	'megpdwpughrinkatfjoyzxzbvq',
	'mxgrdwpulhrinyatfjoyzxcbvq',
	'megsdwpulhpigkatfjoyzxcbfq',
	'mhgsdwpulhrinkagfjoxzxcbvq',
	'megsdwpblhtinkatfjqyzxcbvq',
	'megsawvulhrinkatfjoyzxcfvq',
	'metsuwpulhrinkatfjowzxcbvq',
	'mexsdwpulhrinkatsjoyzxvbvq',
	'megtdwpulhrinkatfjoizxcpvq',
	'megidwpjlhrinkatfdoyzxcbvq',
	'megsdwpuljrivkatfjoyqxcbvq',
	'mespdppulhrinkatfjoyzxcbvq',
	'megsdcpulhminkatftoyzxcbvq',
	'megsdwpulhriskatfjayzlcbvq',
	'mejsdwpulhrinkatfvoyzxibvq',
	'megfdwputhriykatfjoyzxcbvq',
	'megsdwparhrinkbtfjoyzxcbvq',
	'mtgsdwpulhmingatfjoyzxcbvq',
	'megsdwjulhrinkatfjtyzxtbvq',
	'megsvwpulhrinkatfjoyzecbvf',
	'megsdwpulprinkatyqoyzxcbvq',
	'zegsdwpulhwinkatfjoyzxcfvq',
	'megsdwiulhrinkatfjoyzxcjcq',
	'aegsdwpulirinkatfjoyvxcbvq',
	'mepsdwculbrinkatfjoyzxcbvq',
	'msgsdcpulhrinkctfjoyzxcbvq',
	'megsdwpulhrinkatfjoozxfevq',
	'megscwpulhrinkatmjoyzxcbsq',
	'megsdwpulhrinkltfjoyzxtmvq',
	'megsddpulhrixkatfjyyzxcbvq',
	'megsdwpulhrinkctfjoqzhcbvq',
	'megsbapblhrinkatfjoyzxcbvq',
	'megsdwpulhrinkatfjoyyxgpvq',
	'mwpsdwpulhrinkutfjoyzxcbvq',
	'megsdwpulhrinvnlfjoyzxcbvq',
	'megsdwsulorinkakfjoyzxcbvq',
	'mbgsdwpulhrinkktfjoyzxcbvg',
	'megddwpulhrindatfjoyzxcbvr',
	'memsdwpulhrinkatqjoyzxcbvo',
	'megsdwpulbrinkarfjoyzxcbxq',
	'megsdwpulhrilkatfjoynxcgvq',
	'mxgsdzpulhrinkatfjoydxcbvq',
	'megsawpulhrinkotfjoyzacbvq',
	'measdwpulhrinkctvjoyzxcbvq',
	'medsdwpulhtinkaqfjoyzxcbvq',
	'megsdwsulhrknkatfjoylxcbvq',
	'megadwpulhrinkatfjkyzxcbvh',
	'mygsdwpulhrinkatfboyzxcavq',
	'megsdwpulhrinkaufjxyzccbvq',
	'mtgsdwpulhrunkatfkoyzxcbvq',
	'megsdwpulhrinkamfwryzxcbvq',
	'meesdwpulhrgnkatnjoyzxcbvq',
	'megddwpolhrinkatfjoyixcbvq',
	'megsdwpulhrinsatfjoyzicwvq',
	'mmgsdwpulhrinkltfjoyzxcgvq',
	'meisdwpulhhinkatfjoyzxubvq',
	'megpdwpulhrinkatfroyzxcbkq',
	'megszwpuhhrinkatfjoyzxcbzq',
	'mersdwpulhrikcatfjoyzxcbvq',
	'mjgsdwpulhrinratfjoyzxcbvl',
	'megsdwnulkxinkatfjoyzxcbvq',
	'megsdwpulhrinkatlaoyzxpbvq',
	'megsdwpulhribkitfjjyzxcbvq',
	'megsdwpzlhrinkalfjoyzkcbvq',
	'megsdwpulhrinkutfjoyzxcdnq',
	'mfgpdwputhrinkatfjoyzxcbvq',
	'oegshwpclhrinkatfjoyzxcbvq',
	'megvdwxulhrinkatfjowzxcbvq',
	'mrgydwpulhrinkatfjoyzxcbvl',
	'megsdwpuqhrinkaxfjoyzxcbfq',
	'megsdwpughrinixtfjoyzxcbvq',
	'megsdwpslxrinkatfjoyzxcbvl',
	'megsdwpukhrinkatfjovzxnbvq',
	'megsdwpulnrinkrtojoyzxcbvq',
	'megsdwpuvhrinkatfjjyzxclvq',
	'vegrdwpulhrinzatfjoyzxcbvq',
	'melsdwwulvrinkatfjoyzxcbvq',
	'megsdwpulhrizkbtfjoyzjcbvq',
	'megsdwpulhrinlatfjoyzkcbvr',
	'megsdweulhrinkaofqoyzxcbvq',
	'megsdcpulhrifkatfdoyzxcbvq',
	'negsdwpulhainkztfjoyzxcbvq',
	'megsdwpklhrinkttfjoyzxvbvq',
	'megsdwpothrdnkatfjoyzxcbvq',
	'megsdwpulvrinkatfaoyzxcbvr',
	'mewsdwpulhrinkatfooyzxtbvq',
	'megtdwpulhrinkatfxoyzxcbvy',
	'zegsdwpulhrinkamljoyzxcbvq',
	'mkgodwpulhrcnkatfjoyzxcbvq',
	'megsdepularinkatfjoyzxybvq',
	'segsdwpulhrinkatfmoyzycbvq',
	'mbgsdwpulhrsnkztfjoyzxcbvq',
	'megsdwpmlhrinkatfjxyzhcbvq',
	'megsdwpulhrinkatfboyqxmbvq',
	'megsdwpulhrinkadtpoyzxcbvq',
	'megsdmpulhrjnkatfjoyzxwbvq',
	'megsdwpulhrivkatfroywxcbvq',
	'megsdwdulhrinkatpjwyzxcbvq',
	'megsdwpylhrdrkatfjoyzxcbvq',
	'megsdwpulhrvnkptfjoyzlcbvq',
	'megsdwpuihridkatfjuyzxcbvq',
	'megsdwpulhbiikatfjxyzxcbvq',
	'meggdwpulurinkatfjoyaxcbvq',
	'mehsnwpulcrinkatfjoyzxcbvq',
	'megsdwpulhrinkatfjoczdclvq',
	'megsdwjulhrinkatfhkyzxcbvq',
	'megsdwpulhrinoatfjoyzxcwvy',
	'megpdwpelhrfnkatfjoyzxcbvq',
	'megsjwpulhrwnkatfjdyzxcbvq',
	'megsdwpulhrbniatfjoyzxcbpq',
	'megsdwpulhrwnkatfjoydxcpvq',
	'megsdwrulhrinkatfjvyixcbvq',
	'yegvdwpulhtinkatfjoyzxcbvq',
	'meosdwpulhrinkatfjhyzxsbvq',
	'mjgsdwpulhrinkatfjoyyxcjvq',
	'megsdwpulhrinkatfnoyzlmbvq',
	'mehsdfkulhrinkatfjoyzxcbvq',
	'megsdwpuahrinkatfyoyzxcwvq',
	'megsdwpulhyinkatfjobzkcbvq',
	'megsdwpjlhrinkatfnoyzscbvq',
	'megsdwiulhrinqatfjoyzxcavq',
	'megsdwpulurinkatfjoykxcbmq',
	'megsdwpmlhvinkatfjotzxcbvq',
	'megswwpulhrinfatfjoytxcbvq',
	'mxgsdwpulhrrnkatfjoyhxcbvq',
	'megubwpulhrinkaafjoyzxcbvq',
	'megsdwpulhrdnsztfjoyzxcbvq',
	'megsdwpulhronkgtfjhyzxcbvq',
	'megsdwzulhfinratfjoyzxcbvq',
	'megsdwpulhrinkrtfjqyixcbvq',
	'megspwpulhrinkatfjoywxcavq',
	'megmfjpulhrinkatfjoyzxcbvq',
	'lelsdwpulhrinsatfjoyzxcbvq',
	'megsdwnultrinkatfjoyzxybvq',
	'megsdwpulhdnnkatfjpyzxcbvq',
	'megsdwpulhzinkatfjoyzhcpvq',
	'megoddpulhrilkatfjoyzxcbvq',
	'megsdvpulhrwnkatfjoyzxcbdq',
	'megsdwpulhmikkatfjoyzxcbvr',
	'meesdwpulhrinkaofjoazxcbvq',
	'megndwhulhrinfatfjoyzxcbvq',
	'megsdwpulhjihkatfjoyzxcbvb',
	'jegsdwpulhrinkattjoszxcbvq',
	'megsdwpulhrenkatfjodzxcbvp',
	'mefsdwpulhrinkatfjoyzxcczq',
	'megsdwpulhrknkatfjovzxcbvb',
	'megytwpulhrinkatfjoyzxcbvo',
	'csgsdwpulhrinkatdjoyzxcbvq',
	'megsbwpulhrinkazfjtyzxcbvq',
	'mrgsdwpulhjinkatfjoyzxcbvm',
	'megsywzulhrinkatfjofzxcbvq',
	'megxdwpulhrndkatfjoyzxcbvq',
	'mcgsdwpuphrixkatfjoyzxcbvq',
	'megsdlpulxvinkatfvoyzxcbvq',
	'megsdwpulhrinfatfjoyzicbvo',
	'megwgwpulhrinpatfjoyzxcbvq',
	'mggsdwpulhrinkatfjtrzxcbvq',
	'msgsdwpulirinkatfjoyzxcbaq',
	'megsdwpulhrineatfeoyzxcbvl',
	'megsdnpulhrinkatojoyzxcbvb',
	'mfgsdwpulhdinkatmjoyzxcbvq',
	'megsdwpulhrinkawfjuyzxcbvg',
	'megsdwpulhrincatfjoyzxcxvu',
	'mevsdwzplhrinkatfjoyzxcbvq',
	'megskweulhfinkatfjoyzxcbvq',
	'mebsdvpulhrinkatfjoyzxcbkq',
	'megddwiulhrinkatfioyzxcbvq',
	'mygsdwpulhqinkatfooyzxcbvq',
	'megsdweulhrfnkatfjoybxcbvq',
	'mrgsdhpulmrinkatfjoyzxcbvq',
	'megsdwkukhrinkatftoyzxcbvq',
	'megsqwpulhrinfatfjoyzxebvq',
	'megsdwpulhriskanfjoyzxctvq',
]

letters_counted_twice = 0
letters_counted_thrice = 0

for box_id in box_ids:
	letter_count = {}
	for letter in box_id:
		if letter in letter_count:
			letter_count[letter] = letter_count[letter] +1
		else:
			letter_count[letter] = 1

	found_2 = False
	found_3 = False
	for letter in letter_count:
		if letter_count[letter] == 2 and not found_2:
			letters_counted_twice += 1
			found_2 = True
		elif letter_count[letter] == 3 and not found_3:
			letters_counted_thrice += 1
			found_3 = True

print "Part 1: " + str(letters_counted_twice*letters_counted_thrice)
# Part 1: 5456

for box_id in box_ids:
	box_ids.remove(box_id) # remove from list so we don't check it again
	for box_id_2 in box_ids:
		zipped = zip(box_id, box_id_2)
		original_length = len(zipped)
		matches = [a for a, b in zipped if a == b]
		if len(matches) == original_length - 1:
			print ''.join(matches)
			# megsdlpulxvinkatfoyzxcbvq